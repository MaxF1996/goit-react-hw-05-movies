{"version":3,"file":"static/js/375.f06e7129.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","hooks/useFetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const MovieBackBtn = styled(Link)`\n  text-decoration: none;\n  font-weight: 700;\n  font-size: 18px;\n  color: white;\n  background-color: blue;\n  opacity: 50%;\n\n  border: 2px solid blue;\n  border-radius: 5px;\n  padding: 5px;\n  display: block;\n  max-width: fit-content;\n\n  position: fixed;\n  top: 105px;\n  left: calc(75%);\n\n  :hover {\n    color: blue;\n    background-color: white;\n  }\n`;\n\nexport const MovieSection = styled.section`\n  @media screen and (min-width: 700px) {\n    display: flex;\n    justify-content: center;\n    gap: 40px;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 350px;\n  margin: 0 auto;\n`;\n\nexport const MovieInfo = styled.div``;\n\nexport const MovieTitle = styled.h1``;\n\nexport const MovieScore = styled.p``;\n\nexport const MovieDescription = styled.p``;\n\nexport const MovieHeader = styled.h3``;\n\nexport const MovieAdditionalInfo = styled.section``;\n\nexport const MovieAddLink = styled(NavLink)`\n  display: block;\n  max-width: fit-content;\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport useFetchMovies from '../../hooks/useFetchMovies';\nimport Loader from 'components/Loader/Loader';\nimport {\n  MovieSection,\n  MoviePoster,\n  MovieInfo,\n  MovieTitle,\n  MovieScore,\n  MovieHeader,\n  MovieDescription,\n  MovieAdditionalInfo,\n  MovieAddLink,\n  MovieBackBtn,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  //   const navigate = useNavigate();\n  //   const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  const { data, loading, baseImgUrl } = useFetchMovies('movieInfo', '', movieId);\n\n  return (\n    <>\n      <MovieBackBtn to={backLinkHref}>&lt;&lt; Back to Search</MovieBackBtn>\n      {loading && <Loader />}\n      {!loading && data && data.id && (\n        <>\n          <MovieSection>\n            <MoviePoster\n              src={\n                data.poster_path\n                  ? `${baseImgUrl}${data.poster_path}`\n                  : `https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg`\n              }\n              alt={data.title}\n            />\n            <MovieInfo>\n              <MovieTitle>{data.title}</MovieTitle>\n              <MovieScore>User Score: {Math.round(data.vote_average * 10)}%</MovieScore>\n              <MovieHeader>Overview</MovieHeader>\n              <MovieDescription>{data.overview}</MovieDescription>\n              <MovieHeader>Genres</MovieHeader>\n              <MovieDescription>{data.genres.map(genre => genre.name).join(', ')}</MovieDescription>\n            </MovieInfo>\n          </MovieSection>\n          <MovieAdditionalInfo>\n            <MovieHeader>Additional Info:</MovieHeader>\n            <MovieAddLink to={`cast`} state={location.state}>\n              Cast\n            </MovieAddLink>\n            <MovieAddLink to={`reviews`} state={location.state}>\n              Reviews\n            </MovieAddLink>\n            <Outlet />\n          </MovieAdditionalInfo>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetchMovies = (typeofFetch, searchQuery = '', movieId = '', page = 1) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n\n  const apiUrl = (() => {\n    const baseUrl = 'https://api.themoviedb.org/3/';\n    const apiKey = 'da32420fa9f1589cda3e8b28e89608b4';\n\n    switch (typeofFetch) {\n      case 'trending':\n        return `${baseUrl}trending/movie/week?api_key=${apiKey}`;\n      case 'search':\n        return `${baseUrl}search/movie?api_key=${apiKey}&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`;\n      case 'movieInfo':\n        return `${baseUrl}movie/${movieId}?api_key=${apiKey}&language=en-US`;\n      case 'movieCast':\n        return `${baseUrl}movie/${movieId}/credits?api_key=${apiKey}&language=en-US`;\n      case 'movieReviews':\n        return `${baseUrl}movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=${page}`;\n      default:\n        return '';\n    }\n  })();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (typeofFetch === 'search' && searchQuery === '') {\n        return;\n      }\n      setLoading(true);\n      try {\n        const response = await axios.get(apiUrl);\n        setData(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        error ? console.log(error) : console.log('done');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [apiUrl, searchQuery, typeofFetch]);\n\n  return { data, loading, error, baseImgUrl };\n};\n\nexport default useFetchMovies;\n"],"names":["MovieBackBtn","styled","Link","MovieSection","MoviePoster","MovieInfo","MovieTitle","MovieScore","MovieDescription","MovieHeader","MovieAdditionalInfo","MovieAddLink","NavLink","movieId","useParams","location","useLocation","backLinkHref","state","from","useFetchMovies","data","loading","baseImgUrl","to","Loader","id","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","typeofFetch","searchQuery","page","useState","setData","setLoading","error","setError","apiUrl","baseUrl","apiKey","useEffect","fetchData","axios","response","console","log"],"sourceRoot":""}